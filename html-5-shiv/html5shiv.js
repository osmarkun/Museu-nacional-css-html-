/**
* @preserve HTML5 Shiv 3.7.3 | @afarkas @jdalton @jon_neal @rem | Licenciado MIT/GPL2
*/
! function ( a , b ) { function  c ( a , b ) { var  c = a . createElement ( "p" ) , d = a . getElementsByTagName ( "cabeça" ) [ 0 ] || um . documentElemento ; retornar  c . innerHTML = "x<style>" + b + "</style>" , d. insertBefore ( c . lastChild , d . firstChild ) } function  d ( ) { var  a = t . elementos ; return "string" == typeof  a ? um . split ( " " ) : a } function  e ( a , b ) { var  c = t . elementos ;"string" != typeof  c && ( c = c . join ( " " ) ) , "string" != typeof  a && ( a = a . join ( " " ) ) , t . elementos = c + " " + a , j ( b ) } função  f ( a ) { var  b = s[ a [ q ] ] ; retornar  b || ( b = { } , r ++ , a [ q ] = r , s [ r ] = b ) , b } função  g ( a , c , d ) { if ( c || ( c = b ) , l ) Retorna c . createElement ( a ) ; d || ( d = f ( c ) ) ; var  e ; retorne  e = d . cache [ a ] ​​? d . cache [ a ] ​​. cloneNode ( ) : p . teste ( a ) ? ( d . cache [ a ] ​​= d. createElem ( a ) ) . cloneNode ( ) : d . createElem ( a ) ,! _ e . podeTer Filhos || o . teste ( a ) || e . tagUrn ? e : d . fragmento . appendChild ( e ) } function  h ( a , c ) { if ( a|| ( a = b ) , l ) retorna  a . createDocumentFragment ( ) ; c = c || f ( a ) ; for ( var  e = c . frag . cloneNode ( ) , g = 0 , h = d ( ) , i = h . comprimento ; i > g ;g ++ ) e . createElement ( h [ g ] ) ; return  e } function  i ( a , b ) { b . cache || ( b . cache = { } , b . createElem = a . createElement , b . createFrag = a . createDocumentFragment , b . frag= b . createFrag ( ) ) , um . createElement = function ( c ) { return  t . shivMétodos ? g ( c , a , b ) : b . createElem ( c ) } , a . createDocumentFragment = Function ( "h,f" , "return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&&(" + d( ) . juntar ( ) . replace ( / [ \w \- : ] + / g , function ( a ) { return  b . createElem ( a ) , b . frag . createElement ( a ) , 'c("' + a + '")' } ) + ");return n}" ) ( t , b .frag ) } função  j ( a ) { a || ( a = b ) ; var  d = f ( a ) ; volte ! t . shivCSS || k || d . hasCSS || ( d . hasCSS = ! ! c ( a ,"article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}mark{background:#FF0;color:#000}template{display:none}" ) ) , l || i ( a , d ) , a } var  k , l , m = "3.7.3" , n = a . html5 || { } , o = / ^ < | ^ (?: botão | mapa | selecionar | área de texto| objeto | iframe | opção | optgroup ) $ / i , p = / ^ (?: a | b | código | div | fieldset | h1 | h2 | h3 | h4 | h5 | h6 | i | label | li | ol | p | q | span | strong | estilo| mesa | corpo | td | ª | tr | ul ) $ / i , q = "_html5shiv" , r = 0 , s = { } ; ! function ( ) { tente { var  a = b . createElement ( "a" ) ; um . innerHTML = "<xyz></xyz>" , k = "oculto"em  a , l = 1 == a . childNodes . comprimento || função ( ) { b . createElement ( "a" ) ; var  a = b . createDocumentFragment ( ) ; return "indefinido" == typeof  a . cloneNode || "indefinido" == tipo  de a . createDocumentFragment || "indefinido" == tipo de um . createElement } ( ) } catch ( c ) { k = ! 0 , l = ! 0 } } ( ) ; var  t = { elementos : n . elementos || "abbr artigo ao lado áudio bdi canvas dados datalist detalhes diálogo figcaption figura rodapé cabeçalho hgroup principal marca medidor nav saída imagem progresso seção resumo modelo tempo vídeo" , versão : m , shivCSS : n. shivCSS !== ! 1 , supportUnknownElements : l , shivMethods : n . shivMétodos !== ! 1 , digite : "default" , shivDocument : j , createElement : g , createDocumentFragment : h , addElements : e } ; um . html5 = t , j ( b ) , "objeto"== tipo de  módulo && módulo . exporta && ( modulo.exports = t ) } ( "undefined " ! = typeof window ? window : this , document ) ; 

